% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MSprog.R
\name{MSprog}
\alias{MSprog}
\title{Assess multiple sclerosis disability course from longitudinal data.}
\usage{
MSprog(
  data,
  subj_col,
  value_col,
  date_col,
  outcome,
  relapse = NULL,
  rsubj_col = NULL,
  rdate_col = NULL,
  renddate_col = NULL,
  subjects = NULL,
  delta_fun = NULL,
  worsening = NULL,
  event = "firstCDW",
  baseline = "fixed",
  proceed_from = "firstconf",
  sub_threshold_rebl = "none",
  relapse_rebl = F,
  skip_local_extrema = F,
  validconf_col = NULL,
  conf_days = 12 * 7,
  conf_tol_days = c(7, 2 * 365.25),
  conf_unbounded_right = F,
  require_sust_days = 0,
  check_intermediate = T,
  relapse_to_bl = 30,
  relapse_to_event = 0,
  relapse_to_conf = 30,
  relapse_assoc = 90,
  relapse_indep = NULL,
  impute_last_visit = 0,
  date_format = NULL,
  include_dates = F,
  include_value = F,
  include_stable = T,
  verbose = 1
)
}
\arguments{
\item{data}{\code{data.frame} containing longitudinal data, including: subject ID, outcome value, date of visit.}

\item{subj_col}{Name of data column with subject ID.}

\item{value_col}{Name of data column with outcome value.}

\item{date_col}{Name of data column with date of visit.}

\item{outcome}{Specifies the outcome type. Must be one of the following:
\itemize{
\item{\code{'edss'}}{ (Expanded Disability Status Scale);}
\item{\code{'nhpt'}}{ (Nine-Hole Peg Test);}
\item{\code{'t25fw'}}{ (Timed 25-Foot Walk);}
\item{\code{'sdmt'}}{ (Symbol Digit Modalities Test);}
\item{\code{NULL}}{ (only accepted when specifying a custom \code{delta_fun})}
}}

\item{relapse}{\code{data.frame} containing longitudinal data, including: subject ID and relapse date.}

\item{rsubj_col}{Name of subject ID column for relapse data, if different from outcome data.}

\item{rdate_col}{Name of onset date column for relapse data, if different from outcome data.}

\item{renddate_col}{Name of end date column for relapse data (if present).}

\item{subjects}{Subset of subjects (list of IDs). If none is specified, all subjects listed in data are included.}

\item{delta_fun}{Custom function specifying the minimum shift corresponding to a valid change from the provided reference value.
It must take a numeric value (reference) as input, and return a numeric value corresponding to the minimum shift from baseline.
If none is specified (default), function \code{\link[=compute_delta]{compute_delta()}} for the specified outcome is used.}

\item{worsening}{The direction of worsening (\code{'increase'} if higher values correspond to worse disease course, \code{'decrease'} otherwise).\if{html}{\out{<br />}}
This argument is only used when \code{outcome} is set to \code{NULL}. Otherwise, \code{worsening} is automatically set to
\code{'increase'} if \code{outcome} is set to \code{'edss'}, \code{'nhpt'}, \code{'t25fw'},
and to \code{'decrease'} if \code{outcome} is set to \code{'sdmt'}.}

\item{event}{Specifies which events to detect. Must be one of the following:
\itemize{
\item{\code{'firstCDW'}}{ (first confirmed disability worsening (CDW), default);}
\item{\code{'first'}}{ (only the very first confirmed event - improvement or worsening);}
\item{\code{'firsteach'}}{ (first confirmed disability improvement and first CDW - in chronological order);}
\item{\code{'firstCDWtype'}}{ (first CDW of each kind - PIRA, RAW, and undefined, in chronological order);}
\item{\code{'firstPIRA'}}{ (first PIRA);}
\item{\code{'firstRAW'}}{ (first RAW);}
\item{\code{'multiple'}}{ (all events in chronological order).}
}}

\item{baseline}{Specifies the baseline scheme. Must be one of the following:
\itemize{
\item{\code{'fixed'}}{ (first valid outcome value, default);}
\item{\code{'roving_impr'}}{ (updated every time the value is lower than the previous measure and confirmed at the following visit;
suitable for a first-CDW setting to discard fluctuations around baseline);}
\item{\verb{'roving'``\}\{ (updated after each event to last valid confirmed outcome value; suitable for a multiple-event setting - i.e., when }event\verb{is set to}'multiple'\verb{, }'firsteach'\verb{, or }'firstCDWtype'` - or when searching for a specific type of CDW
\itemize{
\item i.e., when \code{event} is set to \code{'firstPIRA'} or \code{'firstRAW'}).}
}
}}

\item{proceed_from}{After detecting a confirmed disability event, continue searching after the first
qualifying confirmation visit if \code{proceed_from='firstconf'}, after the event date if \code{proceed_from='event'}.
When rebaselining after a confirmed disability event (if \code{baseline='roving'} or \code{baseline='roving_impr'}),
the baseline is moved to the first qualifying confirmation visit if \code{proceed_from='firstconf'},
to the event date if \code{proceed_from='event'}.}

\item{sub_threshold_rebl}{This argument is only used if \code{baseline='roving'} or \code{baseline='roving_impr'}.
Must be one of the following:
\itemize{
\item{\code{'event'}:}{ move roving baseline at any, possibly sub-threshold, confirmed event
(i.e. any confirmed change in outcome measure, regardless of \code{delta_fun});}
\item{\code{'improvement'}:}{ move roving baseline at any, possibly sub-threshold, confirmed improvement
(i.e. any confirmed improvement in outcome measure, regardless of \code{delta_fun});}
\item{\verb{'worsening'``:\}\{ move roving baseline at any, possibly sub-threshold, confirmed worsening (i.e. any confirmed worsening in outcome measure, regardless of }delta_fun\verb{);\} \\item\{}'none'``:}{ only use valid confirmed events (as per \code{delta_fun}) for rebaseline.}
}}

\item{relapse_rebl}{If \code{TRUE}, re-baseline after every relapse to search for PIRA events.}

\item{skip_local_extrema}{This argument is only used if \code{baseline='roving'} or \code{baseline='roving_impr'}.
If \code{TRUE}, local minima or maxima of the outcome are skipped when moving the baseline.
A visit \code{i} is a local minimum point for \code{outcome} if \code{outcome(i+1)-outcome(i)>=delta_fun(outcome(i))}
and \code{outcome(i-1)-outcome(i)>=delta_fun(outcome(i))}. Local maxima are defined similarly.}

\item{validconf_col}{Name of data column specifying which visits can (\code{T}) or cannot (\code{F}) be used as confirmation visits.
The input data does not necessarily have to include such a column.
If \code{validconf_col=NULL}, all visits are potentially used as confirmation visits.}

\item{conf_days}{Period before confirmation (days). Can be a single value or list-like of any length if multiple windows are to be considered.}

\item{conf_tol_days}{Tolerance window for confirmation visit (days); can be an integer (same tolerance on left and right)
or list-like of length 2 (different tolerance on left and right).
In all cases, the right end of the interval is ignored if \code{conf_unbounded_right} is set to \code{TRUE}.}

\item{conf_unbounded_right}{If \code{TRUE}, confirmation window is unbounded on the right
(regardless of the right end indicated by \code{conf_tol_days}).}

\item{require_sust_days}{Minimum number of days over which a confirmed change must be sustained
(i.e., confirmed at \emph{all} visits occurring in the specified period) to be retained as an event.
Events sustained for the remainder of the follow-up period are retained regardless of follow-up duration.
Setting \code{require_sust_days=Inf}, events are retained only when sustained for the remainder of the follow-up period.\if{html}{\out{<br />}}
(Warning: if \code{check_intermediate} is set to \code{FALSE}, \emph{only the end} of the specified period will be checked for confirmation.)}

\item{check_intermediate}{If \code{TRUE} (default), events are confirmed \emph{over all intermediate visits}
up to the confirmation visit. \if{html}{\out{<br />}}
If set to \code{FALSE} (not recommended in most cases, as it may discard meaningful fluctuations),
events will be confirmed \emph{only at} the specified confirmation visit
(and \emph{only at the end} of the period defined by \code{require_sust_days}, if any).}

\item{relapse_to_bl}{Minimum distance from a relapse (days) for a visit to be used as baseline.
Can be an integer (minimum distance from \emph{last} relapse) or list-like of length 2
(minimum distance from \emph{last} relapse, minimum distance from \emph{next} relapse).
Note that setting the distance to zero means keeping the baseline regardless of surrounding relapses.
If relapse end dates are available (\code{renddate_col}), the minimum distance from last relapse
is overwritten by the relapse duration, unless it was set to zero (in which case it stays 0).
If the designated baseline does not not respect this constraint, the baseline is moved to the next available visit.}

\item{relapse_to_event}{Minimum distance from a relapse (days) for an event to be considered as such.
Can be an integer (minimum distance from \emph{last} relapse) or list-like of length 2
(minimum distance from \emph{last} relapse, minimum distance from \emph{next} relapse).
Note that setting the distance to zero means keeping the event regardless of surrounding relapses.
If relapse end dates are available (\code{renddate_col}), the minimum distance from last relapse
is overwritten by the relapse duration, unless it was set to zero (in which case it stays 0).}

\item{relapse_to_conf}{Minimum distance from a relapse (days) for a visit to be a valid confirmation visit.
Can be an integer (minimum distance from \emph{last} relapse) or list-like of length 2
(minimum distance from \emph{last} relapse, minimum distance from \emph{next} relapse).
Note that setting the distance to zero means keeping a confirmation visit regardless of surrounding relapses.
If relapse end dates are available (\code{renddate_col}), the minimum distance from last relapse
is overwritten by the relapse duration, unless it was set to zero (in which case it stays 0).}

\item{relapse_assoc}{Maximum distance from a relapse (days) for a CDW event to be considered as RAW.
Can be an integer (maximum distance from \emph{last} relapse) or list-like of length 2
(maximum distance from \emph{last} relapse, maximum distance from \emph{next} relapse).
If relapse end dates are available (\code{renddate_col}), the maximum distance from last relapse
is overwritten by the relapse duration.}

\item{relapse_indep}{Specifies relapse-free intervals for PIRA definition.
Must be given in the form produced by function \code{\link[=relapse_indep_from_bounds]{relapse_indep_from_bounds()}} by calling
\code{relapse_indep_from_bounds(b0, b1, e0, e1, c0, c1)}
to specify the intervals around baseline (\code{b0} and \code{b1}),
event (\code{e0} and \code{e1}), and confirmation (\code{c0} and \code{c1}). For instance:
\itemize{
\item{No relapses within event-90dd->event+30dd and within confirmation-90dd->confirmation+30dd [1]:
\cr\code{relapse_indep <- relapse_indep_from_bounds(0,0,90,30,90,30)} (default);}
\item{No relapses between baseline and confirmation (high-specificity definition from [1]):
\cr\code{relapse_indep <- relapse_indep_from_bounds(0,NULL,NULL,NULL,NULL,0)};}
\item{No relapses within baseline->event+30dd and within confirmation+-30dd [2]:
\cr\code{relapse_indep <- relapse_indep_from_bounds(0,NULL,NULL,30,30,30)}}
}
If relapse end dates are available (\code{renddate_col}), it is possible to define PIRA based on those
by setting \code{use_end_dates=T} in \code{\link[=relapse_indep_from_bounds]{relapse_indep_from_bounds()}}.}

\item{impute_last_visit}{Imputation probability for worsening events occurring at last visit (i.e. with no confirmation).
Unconfirmed worsening events occurring al the last visit are never imputed if \code{impute_last_visit=0};
they are always imputed if \code{impute_last_visit=1};
they are imputed with probability \code{p}, \verb{0<p<1}, if \code{impute_last_visit=p}.
If a value \code{N>1} is passed, unconfirmed worsening events are imputed only if occurring within \code{N} days of follow-up
(e.g., in case of early discontinuation).}

\item{date_format}{Format of dates in the input data. If not specified, it will be inferred by function \code{\link[=as.Date]{as.Date()}}.}

\item{include_dates}{If \code{TRUE}, report dates of events.}

\item{include_value}{If \code{TRUE}, report value of outcome at event.}

\item{include_stable}{If \code{TRUE}, subjects with no confirmed events are included in extended output \code{data.frame},
with \code{time2event} = total follow up.}

\item{verbose}{One of:
\itemize{
\item{0}{ (print no info);}
\item{1}{ (print concise info, default);}
\item{2}{ (print extended info).}
}}
}
\value{
An object of class \code{'MSprogOutput'} with the following attributes:
\itemize{
\item{\code{event_count}: }{a \code{data.frame} containing the event sequence detected for each subject, and the counts for each event type}
\item{\code{results}: }{a \code{data.frame} with extended info on each event for all subjects}
\item{\code{settings}: }{a list containing all the arguments used to compute the output.}
}
}
\description{
\code{MSprog()} detects and characterises the confirmed disability worsening (CDW)
or improvement events of an outcome measure (EDSS, NHPT, T25FW, or SDMT; or any custom outcome)
for one or more subjects, based on repeated assessments
through time (and on the dates of acute episodes, if any).
Several qualitative and quantitative options are given as arguments that can be set
by the user and reported as a complement to the results to ensure reproducibility.
}
\details{
The events are detected sequentially by scanning the outcome values in chronological order.
Valid time windows for confirmation visits are determined by arguments
\code{conf_days}, \code{conf_tol_days}, \code{conf_unbounded_right}, \code{relapse_to_conf}.
CDW events are classified as relapse-associated or relapse-independent based on their relative timing
with respect to the relapses. Specifically, relapse-associated worsening (RAW) events are defined as
CDW events occurring within a specified interval (\code{relapse_assoc} argument) from a relapse;
the definition of progression independent of relapse activity (PIRA) is established by specifying relapse-free intervals
around the baseline, CDW event, and confirmation visits (\code{relapse_indep} argument).
}
\examples{
# EDSS course
output_edss <- MSprog(toydata_visits, 'id', 'EDSS', 'date', 'edss',
    relapse=toydata_relapses, conf_days=12*7, conf_tol_days=30,
    event='multiple', baseline='roving', verbose=1)
print(output_edss$results) # extended info on each event for all subjects
print(output_edss$event_count) # summary of event sequence for each subject
# SDMT course
output_sdmt <- MSprog(toydata_visits, 'id', 'SDMT', 'date', 'sdmt',
    relapse=toydata_relapses, conf_days=12*7, conf_tol_days=30,
    event='multiple', baseline='roving', verbose=1)
print(output_sdmt$results) # extended info on each event for all subjects
print(output_sdmt$event_count) # summary of event sequence for each subject
}
\references{
[1] Müller J, Cagol A, Lorscheider J, Tsagkas C, Benkert P, Yaldizli Ö, et al.
Harmonizing definitions for progression independent of relapse activity in multiple sclerosis: A systematic review.
JAMA Neurol. 2023;80:1232–45. \cr\cr
[2] Kappos L, Wolinsky JS, Giovannoni G, Arnold DL, Wang Q, Bernasconi C, et al.
Contribution of relapse-independent progression vs relapse-associated worsening to overall confirmed disability
accumulation in typical relapsing multiple sclerosis in a pooled analysis of 2 randomized clinical trials.
JAMA Neurol. 2020;77:1132–40.
}
