% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MSprog.R
\name{MSprog}
\alias{MSprog}
\title{Assess multiple sclerosis disability course from longitudinal data.}
\usage{
MSprog(
  data,
  subj_col,
  value_col,
  date_col,
  outcome,
  relapse = NULL,
  rsubj_col = NULL,
  rdate_col = NULL,
  renddate_col = NULL,
  subjects = NULL,
  delta_fun = NULL,
  worsening = NULL,
  event = "firstCDW",
  baseline = "fixed",
  proceed_from = "firstconf",
  sub_threshold_rebl = "none",
  bl_geq = F,
  relapse_rebl = F,
  skip_local_extrema = "none",
  validconf_col = NULL,
  conf_days = 12 * 7,
  conf_tol_days = c(7, 2 * 365.25),
  require_sust_days = 0,
  check_intermediate = T,
  relapse_to_bl = 30,
  relapse_to_event = 0,
  relapse_to_conf = 30,
  relapse_assoc = 90,
  relapse_indep = NULL,
  impute_last_visit = 0,
  date_format = NULL,
  include_dates = F,
  include_value = F,
  include_stable = T,
  verbose = 1
)
}
\arguments{
\item{data}{\code{data.frame} containing longitudinal data, including: subject ID, outcome value, date of visit.}

\item{subj_col}{Name of data column with subject ID.}

\item{value_col}{Name of data column with outcome value.}

\item{date_col}{Name of data column with date of visit.}

\item{outcome}{Specifies the outcome type. Must be one of the following:
\itemize{
\item{\code{'edss'} (Expanded Disability Status Scale);}
\item{\code{'nhpt'} (Nine-Hole Peg Test);}
\item{\code{'t25fw'} (Timed 25-Foot Walk);}
\item{\code{'sdmt'} (Symbol Digit Modalities Test);}
\item{\code{NULL} (only accepted when specifying a custom \code{delta_fun})}
}}

\item{relapse}{\code{data.frame} containing longitudinal data, including: subject ID and relapse date.}

\item{rsubj_col}{Name of subject ID column for relapse data, if different from outcome data.}

\item{rdate_col}{Name of onset date column for relapse data, if different from outcome data.}

\item{renddate_col}{Name of end date column for relapse data (if present).}

\item{subjects}{Subset of subjects (list of IDs). If none is specified, all subjects listed in data are included.}

\item{delta_fun}{Custom function specifying the minimum shift in the outcome measure that counts as a valid change from the provided reference value.
The function provided must take a numeric value (reference score) as input, and return a numeric value corresponding to the minimum shift from baseline, see example 3 below.
If none is specified (default), the user must provide a non-\code{NULL} value for the \code{outcome} argument (see above) in order to use
the built-in function \code{\link[=compute_delta]{compute_delta()}}.}

\item{worsening}{The direction of worsening (\code{'increase'} if higher values correspond to worse disease course, \code{'decrease'} otherwise).\if{html}{\out{<br />}}
This argument is only used when \code{outcome} is set to \code{NULL}. Otherwise, \code{worsening} is automatically set to
\code{'increase'} if \code{outcome} is set to \code{'edss'}, \code{'nhpt'}, \code{'t25fw'},
and to \code{'decrease'} if \code{outcome} is set to \code{'sdmt'}.}

\item{event}{Specifies which events to detect. Must be one of the following:
\itemize{
\item{\code{'firstCDW'} (first confirmed disability worsening (CDW), default);}
\item{\code{'first'} (only the very first confirmed event -- improvement or worsening);}
\item{\code{'firsteach'} (first confirmed disability improvement and first CDW -- in chronological order);}
\item{\code{'firstCDWtype'} (first CDW of each kind -- PIRA, RAW, and undefined, in chronological order);}
\item{\code{'firstPIRA'} (first PIRA);}
\item{\code{'firstRAW'} (first RAW);}
\item{\code{'multiple'} (all events in chronological order).}
}}

\item{baseline}{Specifies the baseline scheme. Must be one of the following.
\itemize{
\item{\code{'fixed'}: first valid outcome value, default;}
\item{\code{'roving_impr'}: updated after every confirmed disability improvement (to the visit determined by \code{proceed_from});
suitable for a first-CDW setting to discard fluctuations around baseline -- not recommended for randomised data;}
\item{\code{'roving_wors'}: updated after every CDW (to the visit determined by \code{proceed_from});
suitable when searching for a specific type of CDW (i.e., when \code{event} is set to \code{'firstPIRA'} or \code{'firstRAW'});}
\item{\code{'roving'}: updated after each improvement or worsening event to the visit determined by \code{proceed_from};
suitable for a multiple-event setting (i.e., when \code{event} is set to \code{'multiple'},
\code{'firsteach'}, or \code{'firstCDWtype'}) or when searching for a specific type of CDW
(i.e., when \code{event} is set to \code{'firstPIRA'} or \code{'firstRAW'}) -- not recommended for randomised data.}
}}

\item{proceed_from}{After detecting a confirmed disability event, continue searching:
\itemize{
\item{from the next visit after the first qualifying confirmation visit if \code{proceed_from='firstconf'};}
\item{from the next visit after the event if \code{proceed_from='event'}.}
}
If \code{baseline} is set to \code{'roving'}, \code{'roving_impr'}, or \code{'roving_wors'},
when rebaselining after a confirmed disability event, the baseline is moved to:
\itemize{
\item{the first qualifying confirmation visit if \code{proceed_from='firstconf'};}
\item{the event visit if \code{proceed_from='event'}.}
}}

\item{sub_threshold_rebl}{This argument is only used if \code{baseline} is not set to \code{'fixed'}.
Must be one of the following:
\itemize{
\item{\code{'event'}: any confirmed sub-threshold event (i.e. any \emph{confirmed} change in the outcome measure,
regardless of \code{delta_fun}) can potentially trigger a re-baseline;}
\item{\code{'improvement'}: any confirmed sub-threshold improvement (i.e. any \emph{confirmed} improvement in the outcome measure,
regardless of \code{delta_fun}) can potentially trigger a re-baseline;}
\item{\code{'worsening'}: any confirmed sub-threshold worsening (i.e. any \emph{confirmed} worsening in the outcome measure,
regardless of \code{delta_fun}) can potentially trigger a re-baseline;}
\item{\code{'none'}: only use valid confirmed events (as per \code{delta_fun}) for rebaseline.}
}}

\item{bl_geq}{This argument is only used if the baseline is moved.
If \code{TRUE}, the new reference value must always be greater or equal than the previous one;
when it is not, the old reference value is assigned to it [2].}

\item{relapse_rebl}{If \code{TRUE}, re-baseline after every relapse.}

\item{skip_local_extrema}{This argument is only used if the baseline is moved.
It controls function behaviour in the presence of local minima or maxima. \if{html}{\out{<br />}}
A visit \code{i} is a local minimum point for \code{outcome} if \code{outcome[i+1]>outcome[i]}
and \code{outcome[i-1]>outcome[i]}; local maxima are defined similarly.\if{html}{\out{<br />}}
A visit \code{i} is a \emph{strict} local minimum point for \code{outcome} if \if{html}{\out{<br />}} \code{outcome[i+1]-outcome[i]>=delta_fun(outcome[i])};
\if{html}{\out{<br />}} \code{outcome[i-1]-outcome[i]>=delta_fun(outcome[i])}. \if{html}{\out{<br />}}
Strict local maxima are defined similarly. \if{html}{\out{<br />}}
When \code{outcome[i]=outcome[i-2]}, visit \code{i} is \emph{not} considered a local extremum point even if the above conditions hold.
This controls for cases where the outcome has an undulating course.\if{html}{\out{<br />}}
The following argument values are accepted.
\itemize{
\item{\code{'none'}: local extrema are always accepted as valid baseline values.}
\item{\code{'delta'}: the baseline cannot be placed at a \emph{strict} local minimum or maximum.}
\item{\code{'all'}: the baseline cannot be placed at a local minimum or maximum.}
}}

\item{validconf_col}{Name of data column specifying which visits can (\code{T}) or cannot (\code{F}) be used as confirmation visits.
The input data does not necessarily have to include such a column.
If \code{validconf_col=NULL}, all visits are potentially used as confirmation visits.}

\item{conf_days}{Period before confirmation (days). Can be a single value or list-like of any length if multiple windows are to be considered.}

\item{conf_tol_days}{Tolerance window for confirmation visit (days); can be an integer (same tolerance on left and right)
or list-like of length 2 (different tolerance on left and right).
The right end of the interval can be set to \code{Inf} (confirmation window unbounded on the right
-- e.g., "confirmation at 12 \emph{or more} weeks").}

\item{require_sust_days}{Minimum number of days over which a confirmed change must be sustained
(i.e., confirmed at \emph{all} visits occurring in the specified period) to be retained as an event.
Events sustained for the remainder of the follow-up period are always retained regardless of follow-up duration.
Setting \code{require_sust_days=Inf}, events are retained only when sustained for the remainder of the follow-up period.\if{html}{\out{<br />}}
(Warning: if \code{check_intermediate} is set to \code{FALSE}, sustained change will be established based \emph{only on the end} of the specified period.)}

\item{check_intermediate}{If \code{TRUE} (default), events are confirmed \emph{over all intermediate visits}
up to the confirmation visit. \if{html}{\out{<br />}}
If set to \code{FALSE} (not recommended in most cases, as it may discard meaningful fluctuations),
events will be confirmed \emph{only at} the specified confirmation visit
(and \emph{only at the end} of the period defined by \code{require_sust_days}, if any).}

\item{relapse_to_bl}{Minimum distance from a relapse (days) for a visit to be used as baseline.
Can be an integer (minimum distance from \emph{last} relapse) or list-like of length 2
(minimum distance from \emph{last} relapse, minimum distance from \emph{next} relapse).
Note that setting the distance to zero means keeping the baseline where it is regardless of surrounding relapses.
If relapse end dates are available (\code{renddate_col}), the minimum distance from last relapse
is overwritten by the relapse duration, unless it was set to zero (in which case it stays 0).
If the designated baseline does not respect this constraint, the baseline is moved to the next available visit.}

\item{relapse_to_event}{Minimum distance from a relapse (days) for an event to be considered as such.
Can be an integer (minimum distance from \emph{last} relapse) or list-like of length 2
(minimum distance from \emph{last} relapse, minimum distance from \emph{next} relapse).
Note that setting the distance to zero means retaining the event regardless of surrounding relapses.
If relapse end dates are available (\code{renddate_col}), the minimum distance from last relapse
is overwritten by the relapse duration, unless it was set to zero (in which case it stays 0).}

\item{relapse_to_conf}{Minimum distance from a relapse (days) for a visit to be a valid confirmation visit.
Can be an integer (minimum distance from \emph{last} relapse) or list-like of length 2
(minimum distance from \emph{last} relapse, minimum distance from \emph{next} relapse).
Note that setting the distance to zero means using any visit for confirmation regardless of surrounding relapses.
If relapse end dates are available (\code{renddate_col}), the minimum distance from last relapse
is overwritten by the relapse duration, unless it was set to zero (in which case it stays 0).}

\item{relapse_assoc}{Maximum distance from a relapse (days) for a CDW event to be classified as RAW.
Can be an integer (maximum distance from \emph{last} relapse) or list-like of length 2
(maximum distance from \emph{last} relapse, maximum distance from \emph{next} relapse).
If relapse end dates are available (\code{renddate_col}), the maximum distance from last relapse
is overwritten by the relapse duration.}

\item{relapse_indep}{Specifies relapse-free intervals for PIRA definition.
Must be given in the form produced by function \code{\link[=relapse_indep_from_bounds]{relapse_indep_from_bounds()}} by calling
\cr\code{relapse_indep_from_bounds(p0, p1, e0, e1, c0, c1)}\cr
to specify the intervals around (any subset of) three checkpoints:
(i) a preceding visit, e.g., baseline or last visit before the event (\code{p0} and \code{p1}),
(ii) the event (\code{e0} and \code{e1}), and (iii) the first available confirmation visit (\code{c0} and \code{c1}).
If relapse end dates are available (\code{renddate_col}), it is possible to define PIRA based on those
by setting \code{use_end_dates=T} in \code{\link[=relapse_indep_from_bounds]{relapse_indep_from_bounds()}}.}

\item{impute_last_visit}{Imputation probability for worsening events occurring at last visit (i.e. with no confirmation).
Unconfirmed worsening events occurring at the last visit are never imputed if \code{impute_last_visit=0};
they are always imputed if \code{impute_last_visit=1};
they are imputed with probability \code{p}, \verb{0<p<1}, if \code{impute_last_visit=p}.
If a value \code{N>1} is passed, unconfirmed worsening events are imputed only if occurring within \code{N} days of follow-up
(e.g., in case of early discontinuation).}

\item{date_format}{Format of dates in the input data. If not specified, it will be inferred by function \code{\link[=as.Date]{as.Date()}}.}

\item{include_dates}{If \code{TRUE}, \code{output$results} will include the date of each event (\code{'date'} column)
and the date of the corresponding baseline (\code{'bldate'} column).}

\item{include_value}{If \code{TRUE},  \code{output$results} will include the outcome value at each event (\code{'value'} column)
and at the corresponding baseline (\code{'blvalue'} column).}

\item{include_stable}{If \code{TRUE}, subjects with no confirmed events are included in \code{output$results},
with \code{time2event} = total follow up.}

\item{verbose}{One of:
\itemize{
\item{0 (print no info);}
\item{1 (print concise info, default);}
\item{2 (print extended info).}
}}
}
\value{
An object of class \code{'MSprogOutput'} with the following attributes:
\itemize{
\item{\code{event_count}: a \code{data.frame} containing the event sequence detected for each subject, and the counts for each event type}
\item{\code{results}: a \code{data.frame} with extended info on each event for all subjects}
\item{\code{settings}: a list containing all the arguments used to compute the output.}
}
}
\description{
\code{MSprog()} detects and characterises the confirmed disability worsening (CDW)
or improvement events of an outcome measure (EDSS, NHPT, T25FW, or SDMT; or any custom outcome)
for one or more subjects, based on repeated assessments
through time (and on the dates of acute episodes, if any).
Several qualitative and quantitative options are given as arguments that can be set
by the user and reported as a complement to the results to ensure reproducibility.
}
\details{
The events are detected sequentially by scanning the outcome values in chronological order.
Valid time windows for confirmation visits are determined by arguments
\code{conf_days}, \code{conf_tol_days}, \code{relapse_to_conf}.
CDW events are classified as relapse-associated or relapse-independent based on their relative timing
with respect to the relapses. Specifically, relapse-associated worsening (RAW) events are defined as
CDW events occurring within a specified interval (\code{relapse_assoc} argument) from a relapse;
the definition of progression independent of relapse activity (PIRA) is established by specifying relapse-free intervals
around the baseline, CDW event, and confirmation visits (\code{relapse_indep} argument).
}
\examples{
# 1. EDSS course
output <- MSprog(toydata_visits, subj_col='id', value_col='EDSS', date_col='date', outcome='edss',
    relapse=toydata_relapses, conf_days=12*7, conf_tol_days=30,
    event='multiple', baseline='roving', verbose=1)
print(output$results) # extended info on each event for all subjects
print(output$event_count) # summary of event sequence for each subject
# 2. SDMT course
output <- MSprog(toydata_visits, subj_col='id', value_col='SDMT', date_col='date', outcome='sdmt',
    relapse=toydata_relapses, conf_days=12*7, conf_tol_days=30,
    event='multiple', baseline='roving', verbose=1)
print(output$results) # extended info on each event for all subjects
print(output$event_count) # summary of event sequence for each subject
# 3. SDMT course, with a custom delta function
my_sdmt_delta <- function(reference_value) {min(c(reference_value/5, 4))}
output <- MSprog(toydata_visits, subj_col='id', value_col='SDMT', date_col='date', outcome='sdmt',
    delta_fun=my_sdmt_delta,
    relapse=toydata_relapses, conf_days=12*7, conf_tol_days=30,
    event='multiple', baseline='roving', verbose=1)
print(output$results) # extended info on each event for all subjects
print(output$event_count) # summary of event sequence for each subject
}
\references{
[1] Müller J, Cagol A, Lorscheider J, Tsagkas C, Benkert P, Yaldizli Ö, et al.
Harmonizing definitions for progression independent of relapse activity in multiple sclerosis: A systematic review.
JAMA Neurol. 2023;80:1232–45. \cr\cr
[2] Kappos L, Wolinsky JS, Giovannoni G, Arnold DL, Wang Q, Bernasconi C, et al.
Contribution of relapse-independent progression vs relapse-associated worsening to overall confirmed disability
accumulation in typical relapsing multiple sclerosis in a pooled analysis of 2 randomized clinical trials.
JAMA Neurol. 2020;77:1132–40.
}
