}
} #for (subjid in all_subj)
#################################################################
if (verbose >= 1) {
message(paste("\n---\nOutcome: ", toupper(outcome), "\nConfirmation at: ",
paste(conf_months, collapse = ", "), "mm (-", conf_tol_days[1], "dd, +",
ifelse(conf_left, "inf", conf_tol_days[2]), "dd)\nBaseline: ", baseline,
ifelse(sub_threshold, " (sub-threshold)", ""),
ifelse(relapse_rebl, " (and post-relapse re-baseline)", ""),
"\nRelapse influence: ", rel_infl, "dd\nEvents detected: ", event))
if (is.null(subjects) | length(subjects)>1) {
message("\n---\nTotal subjects: ", nsub,
"\n---\nProgressed subjects: ", sum(summary$progression > 0), " (PIRA: ", sum(summary$PIRA > 0),
"; RAW: ", sum(summary$RAW > 0), ")")
if (!startsWith(event, "firstprog")) {
message("Improved subjects: ", sum(summary$improvement > 0))
}
if (event %in% c('multiple', 'firstprogtype')) {
message("---\nProgression events: ",
sum(summary$progression), " (PIRA: ", sum(summary$PIRA), "; RAW: ", sum(summary$RAW), ")")
}
if (event=='multiple') {
message("Improvement events: ", sum(summary$improvement))
}
}
if (min_value > 0) {
message("---\n*** NOTE: only progressions to ", toupper(outcome), ">=",
min_value, " are considered ***\n")
}
}
columns <- names(results)
if (!include_dates) {
columns <- columns[!endsWith(columns, "date")]
}
if (!include_value) {
columns <- columns[!endsWith(columns, "value")]
}
results <- results[, columns]
for (w in warnings) {
warning(w)
}
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'RID'
rsubj_col <- 'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca4/subgroup_noemi.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca4/relapse_noemi.xlsx")
# Remove missing values
data <- data[complete.cases(data[ , c(subj_col, value_col, date_col)]), ]
relapse <- relapse[complete.cases(relapse[ , c(rsubj_col, rdate_col)]), ]
View(data)
View(data)
View(data)
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'RID'
rsubj_col <- 'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/edss_noemi.xlsx")
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'RID'
rsubj_col <- 'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/edssNoemi.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/relapseNoemi.xlsx")
# Remove missing values
data <- data[complete.cases(data[ , c(subj_col, value_col, date_col)]), ]
View(data)
View(data)
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'EDSS' #CLINICAL_EDSS_Score_Observed'
date_col <- 'DATE_OF_VISIT' #VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'PATIENT_ID' #'RID'
rsubj_col <- 'PATIENT_ID' #'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/edssNoemi.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/relapseNoemi.xlsx")
# Remove missing values
data <- data[complete.cases(data[ , c(subj_col, value_col, date_col)]), ]
relapse <- relapse[complete.cases(relapse[ , c(rsubj_col, rdate_col)]), ]
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'EDSS' #CLINICAL_EDSS_Score_Observed'
date_col <- 'DATE_OF_VISIT' #VISIT_Date'
rdate_col <- 'DATE_OF_VISIT' #'VISIT_Date'
subj_col <- 'PATIENT_ID' #'RID'
rsubj_col <- 'PATIENT_ID' #'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/edssNoemi.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/relapseNoemi.xlsx")
# Remove missing values
data <- data[complete.cases(data[ , c(subj_col, value_col, date_col)]), ]
relapse <- relapse[complete.cases(relapse[ , c(rsubj_col, rdate_col)]), ]
View(data)
View(relapse)
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'EDSS' #CLINICAL_EDSS_Score_Observed'
date_col <- 'DATE_OF_VISIT' #VISIT_Date'
rdate_col <- 'DATE_OF_ONSET' #'VISIT_Date'
subj_col <- 'PATIENT_ID' #'RID'
rsubj_col <- 'PATIENT_ID' #'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/edssNoemi.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-francesca3/relapseNoemi.xlsx")
# Remove missing values
data <- data[complete.cases(data[ , c(subj_col, value_col, date_col)]), ]
relapse <- relapse[complete.cases(relapse[ , c(rsubj_col, rdate_col)]), ]
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, outcome=outcome, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
delta_fun=delta_fun, conf_months=conf_months, conf_tol_days=conf_tol_days, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
relapse_indep=relapse_indep, sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
View(data)
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'EDSS' #CLINICAL_EDSS_Score_Observed'
date_col <- 'DATE_OF_VISIT' #VISIT_Date'
rdate_col <- 'DATE_OF_ONSET' #'VISIT_Date'
subj_col <- 'PATIENT_ID' #'RID'
rsubj_col <- 'PATIENT_ID' #'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-EXPAND/edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-EXPAND/relapse.xlsx")
View(data)
View(data)
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'AVAL' #CLINICAL_EDSS_Score_Observed'
date_col <- 'ADT' #VISIT_Date'
rdate_col <- 'ADT' #'VISIT_Date'
subj_col <- 'SUBJID' #'RID'
rsubj_col <- 'SUBJID' #'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-EXPAND/edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-EXPAND/relapse.xlsx")
# Remove missing values
data <- data[complete.cases(data[ , c(subj_col, value_col, date_col)]), ]
relapse <- relapse[complete.cases(relapse[ , c(rsubj_col, rdate_col)]), ]
View(relapse)
rm(list=ls())
library(readxl)
library(dplyr)
library(msprog)
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprog/R-MSprog/msprog/R/compute_delta.R')
#####################################################################################
# Settings
# Data
value_col <- 'AVAL' #CLINICAL_EDSS_Score_Observed'
date_col <- 'ADT' #VISIT_Date'
rdate_col <- 'DATA_RELAPSE' #'VISIT_Date'
subj_col <- 'SUBJID' #'RID'
rsubj_col <- 'SUBJID' #'RID'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhpt','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
relapse_indep <- NULL #relapse_indep_from_bounds(0,0,90,30,90,30)
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
include_stable <- TRUE # if TRUE, include subjects with no events in extended info
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-EXPAND/edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/Library/CloudStorage/OneDrive-unige.it/DATA/MSprog-EXPAND/relapse.xlsx")
# Remove missing values
data <- data[complete.cases(data[ , c(subj_col, value_col, date_col)]), ]
relapse <- relapse[complete.cases(relapse[ , c(rsubj_col, rdate_col)]), ]
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, outcome=outcome, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
delta_fun=delta_fun, conf_months=conf_months, conf_tol_days=conf_tol_days, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
relapse_indep=relapse_indep, sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
View(data)
as.Date(data[[date_col]], origin='1-1-1970')
