include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MS-Capra/Edss_2023.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MS-Capra/Eventi_2023_new.xlsx")
relapse <- filter(relapse, Decorso=='R')
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
outcome=outcome, conf_months=conf_months, conf_tol=conf_tol, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
summary = output[[1]]
results = output[[2]]
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
View(data)
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(zoo)
library(readxl)
source('/Users/nmontobbio/code/MSprogression/R-MSprog/MSprog.R')
source('/Users/nmontobbio/code/MSprogression/R-MSprog/utils.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'SUBJECT_Trial_ID_Number'
rsubj_col <- 'SUBJECT_Trial_ID_Number'
subjects <- c(10001, 10006, 10090) # (optional) subset of subjects (set to NULL to compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhptD','nhptND','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_relapse.xlsx")
relapse <- filter(relapse, Decorso=='R')
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(zoo)
library(readxl)
source('/Users/nmontobbio/code/MSprogression/R-MSprog/MSprog.R')
source('/Users/nmontobbio/code/MSprogression/R-MSprog/utils.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'SUBJECT_Trial_ID_Number'
rsubj_col <- 'SUBJECT_Trial_ID_Number'
subjects <- c(10001, 10006, 10090) # (optional) subset of subjects (set to NULL to compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhptD','nhptND','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_relapse.xlsx")
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
outcome=outcome, conf_months=conf_months, conf_tol=conf_tol, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
summary = output[[1]]
results = output[[2]]
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(zoo)
library(readxl)
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/MSprog.R')
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/utils.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'SUBJECT_Trial_ID_Number'
rsubj_col <- 'SUBJECT_Trial_ID_Number'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhptD','nhptND','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_relapse.xlsx")
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
outcome=outcome, conf_months=conf_months, conf_tol=conf_tol, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
summary = output[[1]] # summary of detected events for each subject
results = output[[2]] # extended info on event sequence for each subject
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(zoo)
library(readxl)
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/MSprog.R')
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/utils.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'SUBJECT_Trial_ID_Number'
rsubj_col <- 'SUBJECT_Trial_ID_Number'
subjects <- c(10001, 10006) # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhptD','nhptND','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_relapse.xlsx")
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
outcome=outcome, conf_months=conf_months, conf_tol=conf_tol, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
summary = output[[1]] # summary of detected events for each subject
results = output[[2]] # extended info on event sequence for each subject
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::document()
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(zoo)
library(readxl)
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/MSprog.R')
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/utils.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'SUBJECT_Trial_ID_Number'
rsubj_col <- 'SUBJECT_Trial_ID_Number'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhptD','nhptND','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_relapse.xlsx")
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
# Custom delta function
delta_fun <- function(baseline) {
return(min(baseline/40, 4))
}
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
outcome=outcome, delta_fun=delta_fun, conf_months=conf_months, conf_tol=conf_tol, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
summary = output[[1]] # summary of detected events for each subject
results = output[[2]] # extended info on event sequence for each subject
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(zoo)
library(readxl)
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/MSprog.R')
source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/utils.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'SUBJECT_Trial_ID_Number'
rsubj_col <- 'SUBJECT_Trial_ID_Number'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhptD','nhptND','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_relapse.xlsx")
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
if (length(conf_tol_days)==1) {
conf_tol_days = c(conf_tol_days, conf_tol_days)
}
conf_tol_days = 45
if (length(conf_tol_days)==1) {
conf_tol_days = c(conf_tol_days, conf_tol_days)
}
if (is.null(relapse)) {
relapse_rebl <- FALSE
}
if (is.null(rsubj_col)) {
rsubj_col <- subj_col
}
if (is.null(rdate_col)) {
rdate_col <- date_col
}
if (is.null(relapse)) {
relapse = data.frame(matrix(nrow = 0, ncol = 2))
names(relapse) = c(rsubj_col, rdate_col)
}
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
# Convert dates to datetime format
data[[date_col]] <- as.Date(data[[date_col]])
relapse[[rdate_col]] <- as.Date(relapse[[rdate_col]])
if (!is.null(subjects)) {
data <- data[data[[subj_col]] %in% subjects,]
relapse <- relapse[relapse[[rsubj_col]] %in% subjects,]
}
# Define progression delta
delta <- function(value) {
if (is.null(delta_fun)) {
return(compute_delta(value, outcome))
} else return(delta_fun(value))
}
# Define a confirmation window for each value of conf_months
conf_window <- lapply(conf_months, function(t) {
lower <- as.integer(t * 30.44) - conf_tol_days[1]
if (conf_left) {
upper <- Inf
} else {
upper <- as.integer(t * 30.44) + conf_tol_days[2]
}
return(c(lower, upper))
})
# Assess progression
all_subj <- unique(data[[subj_col]])
nsub <- length(all_subj)
max_nevents <- round(max(table(data[[subj_col]]))/2)
results <- data.frame(matrix(nrow = nsub * max_nevents, ncol = 8 + length(conf_months) + (length(conf_months)-1) + 2))
colnames(results) <- c(subj_col, 'nevent', 'event_type', 'bldate', 'blvalue', 'date', 'value', 'time2event',
paste0('conf', conf_months), paste0('PIRA_conf', conf_months[2:length(conf_months)]),
'sust_days', 'sust_last')
results[[subj_col]] <- rep(all_subj, each = max_nevents)
results$nevent <- rep(1:max_nevents, times = nsub)
summary <- data.frame(matrix(nrow = nsub, ncol = 6))
colnames(summary) <- c('event_sequence', 'improvement', 'progression', 'RAW', 'PIRA', 'undefined_prog')
rownames(summary) <- all_subj
subjid = all_subj[1]
data_id <- data[data[[subj_col]] == subjid, ]
data_id
ucounts <- table(data_id[, date_col])
ucounts
any(ucounts > 1)
data_id[1,] = data_id[2,]
ucounts <- table(data_id[, date_col])
ucounts
any(ucounts > 1)
length(data_id)
dim(data_id)
if (any(ucounts > 1)) {
data_id <- data_id %>% group_by_at(vars(date_col)) %>% slice(n())
}
data_id %>% group_by_at(vars(date_col))
data_id %>% group_by_at(vars(date_col)) %>% slice(n())
if (any(ucounts > 1)) {
data_id <- data_id %>% group_by_at(vars(date_col)) %>% slice(n())
}
data_id <- data_id %>% group_by_at(all_of(date_col)) %>% slice(n())
data_id <- data_id %>% group_by_at(vars(date_col)) %>% slice(n())
dim(data_id)
lifecycle::last_lifecycle_warnings()
data_id <- data[data[[subj_col]] == subjid, ]
ucounts <- table(data_id[, date_col])
ucounts
data_id[1,] = data_id[2,]
ucounts <- table(data_id[, date_col])
ucounts
any(ucounts > 1)
data_id <- data_id %>% group_by_at(vars(date_col)) %>% slice(n())
View(data_id)
roxygen2::roxygenize()
library(msprog)
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(zoo)
library(readxl)
library(msprog)
# source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/MSprog.R')
# source('/Users/nmontobbio/code/MSprogression/R-MSprog/msprog/R/utils.R')
#####################################################################################
# Settings
# Data
value_col <- 'CLINICAL_EDSS_Score_Observed'
date_col <- 'VISIT_Date'
rdate_col <- 'VISIT_Date'
subj_col <- 'SUBJECT_Trial_ID_Number'
rsubj_col <- 'SUBJECT_Trial_ID_Number'
subjects <- NULL # (optional) subset of subjects (if NULL, compute on all subjects)
# Progression settings
outcome <- 'edss' # 'edss','nhptD','nhptND','t25fw','sdmt'
conf_months <- c(3, 6) # period before confirmation (months)
conf_tol_days <- 45 # tolerance window for confirmation visit (days): [t(months)-conf_tol(days), t(months)+conf_tol(days)]
conf_left <- FALSE # if TRUE, confirmation window is [t(months)-conf_tol(days), inf)
require_sust_months <- 0 # count an event as such only if sustained for _ months from confirmation
rel_infl <- 90 # influence of last relapse (days)
event <- 'multiple'   # 'first' [only the very first event - improvement or progression]
# 'firsteach' [first improvement and first progression]
# 'firstprog' [first progression]
# 'firstprogtype' [first progression of each kind - PIRA, RAW, undefined]
# 'multiple' [all events - to use coupled with roving baseline!]
baseline <- 'roving' # 'fixed', 'roving'
sub_threshold <- FALSE # if TRUE, include confirmed sub-threshold events for roving baseline
relapse_rebl <- FALSE # if TRUE, search for PIRA events again with post-relapse re-baseline
min_value <- 0 # only consider as progressions those events where the outcome is >= min_value
prog_last_visit <- FALSE # if TRUE, include progressions occurring at last visit (i.e. with no confirmation!)
verbose <- 2 # 0[print no info], 1[print concise info], 2[print extended info]
include_dates <- TRUE # if TRUE, include baseline and event dates
include_value <- TRUE # if TRUE, include outcome value at baseline and at event
# Custom delta function
delta_fun <- NULL
# delta_fun <- function(baseline) {
#   return(min(baseline/40, 4))
# }
#####################################################################################
# SETUP
# Load data
data <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_edss.xlsx")
relapse <- read_excel("/Users/nmontobbio/code/DATA/MSprog-oratorio/oratorio_relapse.xlsx")
# Remove missing values
data <- na.omit(data)
relapse <- na.omit(relapse)
#####################################################################################
# Compute progression
output <- MSprog(data, subj_col, value_col, date_col, subjects=subjects, relapse=relapse, rdate_col=rdate_col, rsubj_col=rsubj_col,
outcome=outcome, delta_fun=delta_fun, conf_months=conf_months, conf_tol=conf_tol, conf_left=conf_left,
require_sust_months=require_sust_months, rel_infl=rel_infl, event=event, baseline=baseline,
sub_threshold=sub_threshold, relapse_rebl=relapse_rebl, min_value=min_value,
prog_last_visit=prog_last_visit, verbose=verbose, include_dates=include_dates,
include_value=include_value)
summary = output[[1]] # summary of detected events for each subject
results = output[[2]] # extended info on event sequence for each subject
?msprog
?compute_delta
